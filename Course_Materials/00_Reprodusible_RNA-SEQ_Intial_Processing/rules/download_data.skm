import glob, os
import random
import csv
from collections import defaultdict

try:
    os.mkdir("FASTQ")
except FileExistsError:
    pass

try:
    os.mkdir("download")
except FileExistsError:
    pass

try:
    os.mkdir("logs")
except FileExistsError:
    pass


SAMPLES = set([])

if os.path.isfile('./NCBI_accession_list.txt'):

    with open("NCBI_accession_list.txt") as file :

        reader = csv.reader(file, delimiter="\t")
        for row in reader:

            RUN = row[0]
            SAMPLES.add(RUN)
            file_name = "download/" + RUN + ".download.sh"
            command = "fastq-dump.2.9.1 --split-files -O FASTQ "

            if len(glob.glob(file_name))==0: #Check if the file is there, as if this file is overwriten everything will start from scratch

                download_file =  open(file_name, "w")

                download_file.write("#!/bin/bash" + "\n")
                download_file.write('srr="' + RUN + '"' + "\n" )
                download_file.write(command + " " + RUN + "\n")
                download_file.write( "numLines=$(fastq-dump.2.9.1 --gzip -X 1 -Z --split-spot $srr | wc -l)" + "\n")
                download_file.write( "if [ $numLines -eq 8 ]; then cat FASTQ/${srr}_1.fastq FASTQ/${srr}_2.fastq > FASTQ/$srr.fastq && rm FASTQ/${srr}_1.fastq FASTQ/${srr}_2.fastq; fi"  + "\n")
                download_file.write( "if [ -f FASTQ/${srr}_1.fastq ]; then mv FASTQ/${srr}_1.fastq FASTQ/${srr}.fastq ; elif [ -f FASTQ/${srr}_2.fastq ]; then mv FASTQ/${srr}_2.fastq FASTQ/${srr}.fastq; fi"  + "\n")


if os.path.isfile('download/genome.download.sh')==False:
    
    with open("download/genome.download.sh", "w") as download_file :
        
        download_file.write("#!/bin/bash" + "\n")
        download_file.write("wget http://hgdownload.soe.ucsc.edu/goldenPath/dm6/bigZips/dm6.fa.gz -O Genome/dm6.fa.gz")
        download_file.write("gzip -d Genome/dm6.fa.gz")


print( SAMPLES)

        
rule download_genome:
    input:
        "download/genome.download.sh"
    output:
        "Genome/dm6.fa"
    conda:
        "../envs/download.yaml"
    log:
        "../logs/download_genome.log"
    shell:
        "bash {input}"
    
rule download_sample:
    input:
        "download/{sample}.download.sh"
    output:
        "FASTQ/{sample}.fastq.gz"
    conda:
        "../envs/download.yaml"
    log:
        "../logs/download_sample.log"   
    shell:
        "bash {input}"
        
 
rule download_all:
    input:
        "Genome/dm6.fa",
        expand("FASTQ/{sample}.fastq.gz", sample=SAMPLES)
